{"pages":[],"posts":[{"title":"2020.03.23","text":"text a b 글쓸때 hexo new file 생성 hexo publish hexo generate 정적파일 생성 hexo deploy 깃허브 올리기단축hexo generate –deployhexo deploy –generate","link":"/2020/03/23/2020-03-23/"},{"title":"2020.03.24","text":"참고https://doublesprogramming.tistory.com/63https://goodncuteman.tistory.com/58https://scshim.tistory.com/28 서블릿 컨테이너,서블릿과 redirect와 forward의 차이를 공부했다. 서블릿 컨테이너서블릿 컨테이너는 서블릿의 생명주기를 관리하고 요청이 들어올때마다 쓰레드를 만든다 서블릿서블릿은 init(),service(),destory()로 되어있고service()는 요청에 따라 doget(),dopost()로 나뉘고 각요청은 자체적인쓰레드에 있고 동시에 여러개의 쓰레드를 제공해준다. 서블릿 컨테이너 서버요청 처리 서버가 http 요청을 받는다. 요청을 컨테이너에게 보내고 컨테이너에 서블릿이 없으면 컨테이너 주소공간에 로드한다 컨테이너가 init을 호출하면 초기화된다(처음 로드됐을때 한번만 초기화) 컨테이너가 service를 호출하고 요청에 따라 처리한다 서블릿은 주소에 남아 다른 요청을 처리해준다6 웹서버는 동적으로 생성된 결과를 올바른 위치 반환 JVM 역할jvm은 각 요청을 분리된 자바 쓰레드 내부에서 처리 일단 redirect와 forward대해 알아보자면 redirectredirect는 요청을 하면 server 다른페이지를 이동하라고 요청해주는 것이다.client쪽에서 다시 요청받은 것을 재요청하면 요청받은것을 server가 응답해준다. 이때 url의 주소가 바뀐다.req,resp는 다른페이지 이동시 초기화 된다. redirect 쓰임새시스템의 변화가 생기는 요청 경우 forwardforward는 요청을 하면 다른곳에 건네주고 응답해준다이때 최초 호출한 url만 표시되고 이동한페이지의 url정보는 볼수없다 그리고 실행중인페이지와forward에 의해 호출된 페이지는 req,resp를 공유한다. forward 쓰임새시스템에 변화가 생기지않는 경우 forward와 redirect의 차이점은url의 변화여부(변화 -&gt; redirect.변화 x -&gt; forward)req,resp 객체 재사용여부 (재사용 -&gt; forward, 재사용 x -&gt; redirect) 참고https://doublesprogramming.tistory.com/63https://goodncuteman.tistory.com/58https://scshim.tistory.com/28","link":"/2020/03/24/2020-03-24/"},{"title":"2020.04.04","text":"junit 예외처리 클래스,객체, 인스턴스 개념 복습 junit5는 expected가 안된다12345@Test(expected = LoginUserNullException.class)void loginUserNull() throws Exception { UserVO.login(&quot;123&quot;,TEST_USER.getPwd()); };} 그래서 이방식을 활용해야한다.12345678910@Test() void loginUserNull() throws Exception { Assertions.assertThrows(LoginUserNullException.class, new Executable() { @Override public void execute() throws Throwable { UserVO.login(&quot;123&quot;,TEST_USER.getPwd()); } }); } 클래스클래스는 속성과 행동이있다.클래스는 설계도라고 생각하면된다. 객체객체는 우리가 구현할 어떤 것이고 우리가 구현하고 싶은것을 객체라고한다. 인스턴스객체를 실체화 시킨것이다객체의 생성자를 통해 인스턴스라는 것을 실체화 시켜야한다.","link":"/2020/04/04/2020-04-04/"},{"title":"2020.04.09","text":"상대경로와 절대경로상대경로: 현재 웹페이지를 기준으로 상대적으로 이미지의 위치를 나타내는 경로절대경로: 실제 그이미지가 위치한 곳의 전체경로 상대경로 에서 ./ 페이지가 있는 현재폴더 ../ 그페이지의 위에 이미지 파일 형식gif: 제한적인 색을 사용하고 용량이 적고 투명,애니메이션 이미지 지원하는 형식jpg: 사진이나 일반적인 그림에 쓰이고 높은압축률과 자연스러운 색상표현을 지원하는 형식(투명 X)png: 이미지손실이 적으며 투명과 반투명을 모두 지원하는 형식 구체성css의 선택자 구체성 0,0,0,0 이면 좌측이 크면 클수록 높은 구체성을 가진다. 0, 1, 0, 0: 선택자에 있는 모든 id속성값 0, 0, 1, 0: 선택자에 있는 모든 class 속성값, 기타 속성, 가상 클래스 0, 0, 0, 1: 선택자에 있는 모든 요소, 가상요소 전체 선택자는 0,0,0,0을 가진다. 조합자는 구체성에 영향을 주지 않는다.(&gt;,+) 예시 h1{} =&gt; 0,0,0,1.a{} =&gt; 0,0,1,0#page{} =&gt; 0,1,0,0div#page{} =&gt; 0,1,0,1","link":"/2020/04/09/2020-04-09/"},{"title":"서블릿 컨테이너란","text":"출처원본 https://www.programcreek.com/2013/04/what-is-servlet-container/의역 https://scshim.tistory.com/28 Web Server웹서버는 데이터 전송을 위해 http프로토콜을 쓰고 클라이언트가 요청하고서버가 응답하는 구조이다 Servlet Container서블릿 컨테이너는 서블릿의 생성, 실행, 파괴를 담당하고웹서버안에 Container가 있다 Servlet라이프 사이클이 존재 하며 3가지로 구성되어있다 init()생명주기중 초기화 단계에 호출되고 서블릿이 was에서 초기화 매개변수에 접근할수있게 한다 service()init() 이후 요청들이 들어오면 호출되고 요청들은 별도로 나누어진 쓰레드에서 처리한다.컨테이너는 모든 요청에대해서 service()를 요청하고 종류에따라 처리할수있는 메소드로 전달한다 destory()서블릿 객체가 사라져야할때 호출되고 가지고있던 자원을 풀어준다. 각요청은 자체적인 스레드에 있으며 서블릿객체는 여러개의 쓰레드를 제공한다(thread not safe:코드가 다른 스레드에 의해 상태가 변경될수있음을 의미)서블릿은 jvm 내부에서 작동하고 http요청들의 복잡성을 처리하기위해서 서블릿 컨테이너가 제공된다 서블릿 컨테이너와 서버 요청 처리 웹서버가 http 요청을 받는다. 웹서버는 요청을 서블릿컨테이너로 전달한다. 서블릿이 컨테이너에 없다면, 서블릿을 동적으로 검색하여 컨테이너의 주소 공간에 로드된다. 컨테이너가 서블릿의 init() 메소드를 호출하면, 서블릿이 초기화되고(서블릿이 처음 로드돴을때 한번만 호출) 컨테이너가 서블릿의 service()메소드를 호출하여 http 요청을 처리합니다(예: 요청의 데이터를 읽고, 응답을 만들어냅니다.) 서블릿은 컨테이너 주소에 남아있고, 다른 http 요청들을 처리할수있습니다. 웹서버는 동적으로 생성된 결과를 올바른 위치 반환 JVM 역할서블릿을 사용하는것은 JVM이 각요청을 분리된 자바 스레드 내부에서 처리 하도록하고(서블릿 컨테이너의 주요 장점)서블릿 컨테이너의 가장 중요한 기능은 요청을 서블릿에 전달해서 처리되록하고, jvm이 해당요청 처리한후에생성된 결과를 올바른 장소에 동적으로 반환대부분은 서블릿 컨테이너는 하나의 jvm에서 동작하지만 여러가지가 필요한 경우도 존재 출처원본 https://www.programcreek.com/2013/04/what-is-servlet-container/의역 https://scshim.tistory.com/28","link":"/2020/03/24/%EC%84%9C%EB%B8%94%EB%A6%BF%20%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%9E%80/"},{"title":"이클립스 단축키 정리","text":"ALT + ?ALT + &lt;-,-&gt;: 이전, 이후 작업화면 ALT + Shift + ?ALT + Shift + J: 클래스,메소드,멤버변수 위에 자동으로 주석생성ALT + Shift + S: source menu 보여줌ALT + Shift + S + R: Getter Setter 생성Alt + Shift + S + V: 유용하게 사용할수있는 기능이 implement나 override를 할메소드 찾아서Alt + Shift + S + c: 디폴트 생성자 자동구현Alt + Shift + S + o: 빌드 생성자 자동구현ALT + Shift + R: 해당변수나 클래스 선택하고 변경 Ctrl + ?Ctrl + L: 특정 줄 번호로 이동Ctrl + D: | 이거 위치에 있는 줄 삭제Ctrl + W: 파일 닫기Ctrl + I: | 이거 위치에 있는 줄 들여쓰기 자동수정Ctrl + M: view 전체화면Ctrl + K: 찾고자 하는 문자열 선택하면 찾아감Ctrl + O: 메소드나 필드 이용Ctrl + N: 새파일/프로젝트 생성 Ctrl + Shift + ?Ctrl + Shift + K: 역으로 찾고자하는 문자열 찾아감Ctrl + Shift + O: 자동으로 importCtrl + Shift + X: 대문자로 변환Ctrl + Shift + Y: 소문자로 변환Ctrl + Alt + Up(Down): 한 줄(블럭) 복사Ctrl + Shift + T: 클래스 찾기 에디터 변환Ctrl + F6: 여러 파일보이고 아래로Ctrl + Shift + F6: // 위로Ctrl + F7: 뷰간 전환Ctrl + F8: 퍼스펙티브간 전환(java -&gt; java EE 선택)F12: 에디터로 포커스 위치 getter,setter menuAlt + A: 모든필드 getter,setter 선택Alt + D: // getter, setter 선택 해제Alt + G: // getter 선택 해제Alt + I: // setter 선택해제Alt + S: selection 가기 위해","link":"/2020/04/08/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4%EB%8B%A8%EC%B6%95%ED%82%A4%EC%A0%95%EB%A6%AC/"}],"tags":[],"categories":[{"name":"TIL","slug":"TIL","link":"/categories/TIL/"},{"name":"2020.03.23","slug":"TIL/2020-03-23","link":"/categories/TIL/2020-03-23/"},{"name":"java","slug":"java","link":"/categories/java/"},{"name":"2020.03.24","slug":"TIL/2020-03-24","link":"/categories/TIL/2020-03-24/"},{"name":"servlet/jsp","slug":"java/servlet-jsp","link":"/categories/java/servlet-jsp/"},{"name":"IDE","slug":"IDE","link":"/categories/IDE/"},{"name":"eclipse","slug":"IDE/eclipse","link":"/categories/IDE/eclipse/"}]}